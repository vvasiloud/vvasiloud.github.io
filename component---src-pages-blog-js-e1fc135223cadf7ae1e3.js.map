{"version":3,"sources":["webpack://vvasiloud.github.io/./src/components/postCard.js","webpack://vvasiloud.github.io/./src/pages/blog.js"],"names":["props","className","count","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","Link","to","fields","slug","title","BlogPage","location","data","siteTitle","site","siteMetadata","social","posts","allMarkdownRemark","edges","postCounter","keywords","map","key","StaticQuery","query","render"],"mappings":"qJAGA,aAAeA,GAAK,OAClB,2BACEC,UAAS,cAAeD,EAAME,MAAQ,GAAM,GAApB,mBAAf,IACPF,EAAMG,UADC,KAELH,EAAMI,KAAKC,YAAYC,UAAvB,yBACJC,MACEP,EAAMI,KAAKC,YAAYC,WAAa,CAClCE,gBAAgB,OACdR,EAAMI,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,IAD1C,MAMnB,gBAAC,EAAAC,KAAD,CAAMC,GAAIb,EAAMI,KAAKU,OAAOC,KAAMd,UAAU,kBAC1C,uBAAKA,UAAU,qBACb,sBAAIA,UAAU,mBACXD,EAAMI,KAAKC,YAAYW,OAAShB,EAAMI,KAAKU,OAAOC,W,wGCXvDE,EAAW,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KACZC,EAAYD,EAAKE,KAAKC,aAAaN,MACnCO,EAASJ,EAAKE,KAAKC,aAAaC,OAChCC,EAAQL,EAAKM,kBAAkBC,MACjCC,EAAc,EAElB,OACE,gBAAC,IAAD,CAAQX,MAAOI,EAAWG,OAAQA,GAChC,gBAAC,IAAD,CAAKP,MAAM,QAAQY,SAAU,CAAC,OAAD,iCAE7B,uBAAK3B,UAAU,qBACb,0BAAQA,UAAU,uBAChB,sBAAIA,UAAU,sBAAd,cAEF,qBAAGA,UAAU,wBAAb,uEAIF,uBAAKA,UAAU,iBACZuB,EAAMK,KAAI,YAAe,IAAZzB,EAAW,EAAXA,KAEZ,OADAuB,IAEE,gBAAC,IAAD,CACEG,IAAK1B,EAAKU,OAAOC,KACjBb,MAAOyB,EACPvB,KAAMA,EACND,UAAS,kCA+CvB,mBAAeH,GAAK,OAClB,gBAAC,EAAA+B,YAAD,CACEC,MAvCY,aAwCZC,OAAQ,SAAAd,GAAI,OACV,gBAACF,EAAD,eAAUC,SAAUlB,EAAMkB,SAAUC,KAAMA,GAAUnB","file":"component---src-pages-blog-js-e1fc135223cadf7ae1e3.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title || props.node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from '../components/postCard';\n\nconst BlogPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const social = data.site.siteMetadata.social\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle} social={social}>\n      <SEO title=\"About\" keywords={[`blog`, `gatsby`, `javascript`, `react`]} />\n\n      <div className=\"post-content pb-0\">\n        <header className=\"post-content-header\">\n          <h1 className=\"post-content-title\">/dev/null</h1>\n        </header>\n        <p className=\"post-content-excerpt\">\n          Sometimes I Write, Therefore I Am... about dev, learning and other</p>\n      </div>\n\n      <div className=\"row post-feed\">\n        {posts.map(({ node }) => {\n          postCounter++\n          return (\n            <PostCard\n              key={node.fields.slug}\n              count={postCounter}\n              node={node}\n              postClass={`col-xs-12 col-sm-4 post`}\n            />\n          )\n        })}\n      </div>\n\n    </Layout>\n  )\n}\n\nconst indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        social {\n          github\n          linkedIn\n        }\n      }\n    }\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/(articles)/\" }}, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={indexQuery}\n    render={data => (\n      <BlogPage location={props.location} data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}