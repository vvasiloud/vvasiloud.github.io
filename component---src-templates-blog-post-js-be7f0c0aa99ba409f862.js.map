{"version":3,"file":"component---src-templates-blog-post-js-be7f0c0aa99ba409f862.js","mappings":"2LAOMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA8CH,OA9CGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAC9CC,EAASR,KAAKC,MAAMC,KAAKG,KAAKC,aAAaE,OAEjD,OACE,gBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUF,MAAOH,EAAWI,OAAQA,GAC/D,gBAAC,IAAD,CACED,MAAOR,EAAKW,YAAYH,MACxBI,YAAaZ,EAAKW,YAAYC,aAAeZ,EAAKa,QAAQ,sBAE5D,2BACEC,UAAS,iBAAkBd,EAAKW,YAAYI,WAAjB,aAE3B,0BAAQD,UAAU,uBAChB,sBAAIA,UAAU,sBAAsBd,EAAKW,YAAYH,QAGtDR,EAAKW,YAAYC,aAChB,qBAAGE,UAAU,wBAAwBd,EAAKW,YAAYC,aAEvDZ,EAAKW,YAAYI,WAChB,uBAAKD,UAAU,sBACb,gBAAC,IAAD,CACEA,UAAU,WACVE,MAAOhB,EAAKW,YAAYI,UAAUE,gBAAgBD,MAClDE,IAAKlB,EAAKW,YAAYH,SAK5B,uBACEM,UAAU,oBACVK,wBAAyB,CAAEC,OAAQpB,EAAKqB,QAG1C,0BAAQP,UAAU,2BASzB,EA9CGhB,CAAyBwB,EAAAA,WAiD/B","sources":["webpack://vvasiloud.github.io/./src/templates/blog-post.js"],"sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const social = this.props.data.site.siteMetadata.social\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} social={social}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}site-head-left\n        />\n        <article\n          className={`post-content ${post.frontmatter.thumbnail || `no-image`}`}\n        >\n          <header className=\"post-content-header\">\n            <h1 className=\"post-content-title\">{post.frontmatter.title}</h1>\n          </header>\n\n          {post.frontmatter.description && (\n            <p className=\"post-content-excerpt\">{post.frontmatter.description}</p>\n          )}\n          {post.frontmatter.thumbnail && (\n            <div className=\"post-content-image\">\n              <Img\n                className=\"kg-image\"\n                fluid={post.frontmatter.thumbnail.childImageSharp.fluid}\n                alt={post.frontmatter.title}\n              />\n            </div>\n          )}\n\n          <div\n            className=\"post-content-body\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n\n          <footer className=\"post-content-footer\">\n            {/* There are two options for how we display the byline/author-info.\n        If the post has more than one author, we load a specific template\n        from includes/byline-multiple.hbs, otherwise, we just use the\n        default byline. */}\n          </footer>\n        </article>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        social {\n          github\n          linkedIn\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        thumbnail {\n          childImageSharp {\n            fluid(quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","social","location","frontmatter","description","excerpt","className","thumbnail","fluid","childImageSharp","alt","dangerouslySetInnerHTML","__html","html","React"],"sourceRoot":""}